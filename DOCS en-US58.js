(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["DOCS en-US58"],{

/***/ "./node_modules/ts-loader/index.js?!./node_modules/vue-loader/dist/index.js?!./website/md-loader/index.js!./website/docs/en-US/tree.md?vue&type=script&lang=ts":
/*!**********************************************************************************************************************************************************!*\
  !*** ./node_modules/ts-loader??ref--2!./node_modules/vue-loader/dist??ref--3-0!./website/md-loader!./website/docs/en-US/tree.md?vue&type=script&lang=ts ***!
  \**********************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ \"./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js\");\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    name: 'component-doc',\n    components: {\n        \"element-demo0\": (function () {\n            const { resolveComponent: _resolveComponent, createVNode: _createVNode, openBlock: _openBlock, createBlock: _createBlock } = vue__WEBPACK_IMPORTED_MODULE_0__;\n            function render(_ctx, _cache) {\n                const _component_el_tree = _resolveComponent(\"el-tree\");\n                return (_openBlock(), _createBlock(\"div\", null, [\n                    _createVNode(_component_el_tree, {\n                        data: _ctx.data,\n                        props: _ctx.defaultProps,\n                        \"onNode-click\": _ctx.handleNodeClick\n                    }, null, 8, [\"data\", \"props\", \"onNode-click\"])\n                ]));\n            }\n            const democomponentExport = {\n                data() {\n                    return {\n                        data: [{\n                                label: 'Level one 1',\n                                children: [{\n                                        label: 'Level two 1-1',\n                                        children: [{\n                                                label: 'Level three 1-1-1'\n                                            }]\n                                    }]\n                            }, {\n                                label: 'Level one 2',\n                                children: [{\n                                        label: 'Level two 2-1',\n                                        children: [{\n                                                label: 'Level three 2-1-1'\n                                            }]\n                                    }, {\n                                        label: 'Level two 2-2',\n                                        children: [{\n                                                label: 'Level three 2-2-1'\n                                            }]\n                                    }]\n                            }, {\n                                label: 'Level one 3',\n                                children: [{\n                                        label: 'Level two 3-1',\n                                        children: [{\n                                                label: 'Level three 3-1-1'\n                                            }]\n                                    }, {\n                                        label: 'Level two 3-2',\n                                        children: [{\n                                                label: 'Level three 3-2-1'\n                                            }]\n                                    }]\n                            }],\n                        defaultProps: {\n                            children: 'children',\n                            label: 'label'\n                        }\n                    };\n                },\n                methods: {\n                    handleNodeClick(data) {\n                        console.log(data);\n                    }\n                }\n            };\n            return Object.assign({ render }, democomponentExport);\n        })(), \"element-demo1\": (function () {\n            const { resolveComponent: _resolveComponent, createVNode: _createVNode, openBlock: _openBlock, createBlock: _createBlock } = vue__WEBPACK_IMPORTED_MODULE_0__;\n            function render(_ctx, _cache) {\n                const _component_el_tree = _resolveComponent(\"el-tree\");\n                return (_openBlock(), _createBlock(\"div\", null, [\n                    _createVNode(_component_el_tree, {\n                        props: _ctx.props,\n                        load: _ctx.loadNode,\n                        lazy: \"\",\n                        \"show-checkbox\": \"\",\n                        \"onCheck-change\": _ctx.handleCheckChange\n                    }, null, 8, [\"props\", \"load\", \"onCheck-change\"])\n                ]));\n            }\n            const democomponentExport = {\n                data() {\n                    return {\n                        props: {\n                            label: 'name',\n                            children: 'zones'\n                        },\n                        count: 1\n                    };\n                },\n                methods: {\n                    handleCheckChange(data, checked, indeterminate) {\n                        console.log(data, checked, indeterminate);\n                    },\n                    handleNodeClick(data) {\n                        console.log(data);\n                    },\n                    loadNode(node, resolve) {\n                        if (node.level === 0) {\n                            return resolve([{ name: 'Root1' }, { name: 'Root2' }]);\n                        }\n                        if (node.level > 3)\n                            return resolve([]);\n                        var hasChild;\n                        if (node.data.name === 'region1') {\n                            hasChild = true;\n                        }\n                        else if (node.data.name === 'region2') {\n                            hasChild = false;\n                        }\n                        else {\n                            hasChild = Math.random() > 0.5;\n                        }\n                        setTimeout(() => {\n                            var data;\n                            if (hasChild) {\n                                data = [{\n                                        name: 'zone' + this.count++\n                                    }, {\n                                        name: 'zone' + this.count++\n                                    }];\n                            }\n                            else {\n                                data = [];\n                            }\n                            resolve(data);\n                        }, 500);\n                    }\n                }\n            };\n            return Object.assign({ render }, democomponentExport);\n        })(), \"element-demo2\": (function () {\n            const { resolveComponent: _resolveComponent, createVNode: _createVNode, openBlock: _openBlock, createBlock: _createBlock } = vue__WEBPACK_IMPORTED_MODULE_0__;\n            function render(_ctx, _cache) {\n                const _component_el_tree = _resolveComponent(\"el-tree\");\n                return (_openBlock(), _createBlock(\"div\", null, [\n                    _createVNode(_component_el_tree, {\n                        props: _ctx.props,\n                        load: _ctx.loadNode,\n                        lazy: \"\",\n                        \"show-checkbox\": \"\"\n                    }, null, 8, [\"props\", \"load\"])\n                ]));\n            }\n            const democomponentExport = {\n                data() {\n                    return {\n                        props: {\n                            label: 'name',\n                            children: 'zones',\n                            isLeaf: 'leaf'\n                        },\n                    };\n                },\n                methods: {\n                    loadNode(node, resolve) {\n                        if (node.level === 0) {\n                            return resolve([{ name: 'region' }]);\n                        }\n                        if (node.level > 1)\n                            return resolve([]);\n                        setTimeout(() => {\n                            const data = [{\n                                    name: 'leaf',\n                                    leaf: true\n                                }, {\n                                    name: 'zone'\n                                }];\n                            resolve(data);\n                        }, 500);\n                    }\n                }\n            };\n            return Object.assign({ render }, democomponentExport);\n        })(), \"element-demo3\": (function () {\n            const { resolveComponent: _resolveComponent, createVNode: _createVNode, openBlock: _openBlock, createBlock: _createBlock } = vue__WEBPACK_IMPORTED_MODULE_0__;\n            function render(_ctx, _cache) {\n                const _component_el_tree = _resolveComponent(\"el-tree\");\n                return (_openBlock(), _createBlock(\"div\", null, [\n                    _createVNode(_component_el_tree, {\n                        data: _ctx.data,\n                        props: _ctx.defaultProps,\n                        \"show-checkbox\": \"\",\n                        \"onCheck-change\": _ctx.handleCheckChange\n                    }, null, 8, [\"data\", \"props\", \"onCheck-change\"])\n                ]));\n            }\n            const democomponentExport = {\n                data() {\n                    return {\n                        data: [{\n                                id: 1,\n                                label: 'Level one 1',\n                                children: [{\n                                        id: 3,\n                                        label: 'Level two 2-1',\n                                        children: [{\n                                                id: 4,\n                                                label: 'Level three 3-1-1'\n                                            }, {\n                                                id: 5,\n                                                label: 'Level three 3-1-2',\n                                                disabled: true\n                                            }]\n                                    }, {\n                                        id: 2,\n                                        label: 'Level two 2-2',\n                                        disabled: true,\n                                        children: [{\n                                                id: 6,\n                                                label: 'Level three 3-2-1'\n                                            }, {\n                                                id: 7,\n                                                label: 'Level three 3-2-2',\n                                                disabled: true\n                                            }]\n                                    }]\n                            }],\n                        defaultProps: {\n                            children: 'children',\n                            label: 'label',\n                            disabled: 'disabled',\n                        },\n                    };\n                }\n            };\n            return Object.assign({ render }, democomponentExport);\n        })(), \"element-demo4\": (function () {\n            const { resolveComponent: _resolveComponent, createVNode: _createVNode, openBlock: _openBlock, createBlock: _createBlock } = vue__WEBPACK_IMPORTED_MODULE_0__;\n            function render(_ctx, _cache) {\n                const _component_el_tree = _resolveComponent(\"el-tree\");\n                return (_openBlock(), _createBlock(\"div\", null, [\n                    _createVNode(_component_el_tree, {\n                        data: _ctx.data,\n                        \"show-checkbox\": \"\",\n                        \"node-key\": \"id\",\n                        \"default-expanded-keys\": [2, 3],\n                        \"default-checked-keys\": [5],\n                        props: _ctx.defaultProps\n                    }, null, 8, [\"data\", \"props\"])\n                ]));\n            }\n            const democomponentExport = {\n                data() {\n                    return {\n                        data: [{\n                                id: 1,\n                                label: 'Level one 1',\n                                children: [{\n                                        id: 4,\n                                        label: 'Level two 1-1',\n                                        children: [{\n                                                id: 9,\n                                                label: 'Level three 1-1-1'\n                                            }, {\n                                                id: 10,\n                                                label: 'Level three 1-1-2'\n                                            }]\n                                    }]\n                            }, {\n                                id: 2,\n                                label: 'Level one 2',\n                                children: [{\n                                        id: 5,\n                                        label: 'Level two 2-1'\n                                    }, {\n                                        id: 6,\n                                        label: 'Level two 2-2'\n                                    }]\n                            }, {\n                                id: 3,\n                                label: 'Level one 3',\n                                children: [{\n                                        id: 7,\n                                        label: 'Level two 3-1'\n                                    }, {\n                                        id: 8,\n                                        label: 'Level two 3-2'\n                                    }]\n                            }],\n                        defaultProps: {\n                            children: 'children',\n                            label: 'label'\n                        }\n                    };\n                }\n            };\n            return Object.assign({ render }, democomponentExport);\n        })(), \"element-demo5\": (function () {\n            const { resolveComponent: _resolveComponent, createVNode: _createVNode, createTextVNode: _createTextVNode, withCtx: _withCtx, openBlock: _openBlock, createBlock: _createBlock } = vue__WEBPACK_IMPORTED_MODULE_0__;\n            const _hoisted_1 = { class: \"buttons\" };\n            const _hoisted_2 = _createTextVNode(\"get by node\");\n            const _hoisted_3 = _createTextVNode(\"get by key\");\n            const _hoisted_4 = _createTextVNode(\"set by node\");\n            const _hoisted_5 = _createTextVNode(\"set by key\");\n            const _hoisted_6 = _createTextVNode(\"reset\");\n            function render(_ctx, _cache) {\n                const _component_el_tree = _resolveComponent(\"el-tree\");\n                const _component_el_button = _resolveComponent(\"el-button\");\n                return (_openBlock(), _createBlock(\"div\", null, [\n                    _createVNode(_component_el_tree, {\n                        data: _ctx.data,\n                        \"show-checkbox\": \"\",\n                        \"default-expand-all\": \"\",\n                        \"node-key\": \"id\",\n                        ref: \"tree\",\n                        \"highlight-current\": \"\",\n                        props: _ctx.defaultProps\n                    }, null, 8, [\"data\", \"props\"]),\n                    _createVNode(\"div\", _hoisted_1, [\n                        _createVNode(_component_el_button, { onClick: _ctx.getCheckedNodes }, {\n                            default: _withCtx(() => [\n                                _hoisted_2\n                            ]),\n                            _: 1\n                        }, 8, [\"onClick\"]),\n                        _createVNode(_component_el_button, { onClick: _ctx.getCheckedKeys }, {\n                            default: _withCtx(() => [\n                                _hoisted_3\n                            ]),\n                            _: 1\n                        }, 8, [\"onClick\"]),\n                        _createVNode(_component_el_button, { onClick: _ctx.setCheckedNodes }, {\n                            default: _withCtx(() => [\n                                _hoisted_4\n                            ]),\n                            _: 1\n                        }, 8, [\"onClick\"]),\n                        _createVNode(_component_el_button, { onClick: _ctx.setCheckedKeys }, {\n                            default: _withCtx(() => [\n                                _hoisted_5\n                            ]),\n                            _: 1\n                        }, 8, [\"onClick\"]),\n                        _createVNode(_component_el_button, { onClick: _ctx.resetChecked }, {\n                            default: _withCtx(() => [\n                                _hoisted_6\n                            ]),\n                            _: 1\n                        }, 8, [\"onClick\"])\n                    ])\n                ]));\n            }\n            const democomponentExport = {\n                methods: {\n                    getCheckedNodes() {\n                        console.log(this.$refs.tree.getCheckedNodes());\n                    },\n                    getCheckedKeys() {\n                        console.log(this.$refs.tree.getCheckedKeys());\n                    },\n                    setCheckedNodes() {\n                        this.$refs.tree.setCheckedNodes([{\n                                id: 5,\n                                label: 'Level two 2-1'\n                            }, {\n                                id: 9,\n                                label: 'Level three 1-1-1'\n                            }]);\n                    },\n                    setCheckedKeys() {\n                        this.$refs.tree.setCheckedKeys([3]);\n                    },\n                    resetChecked() {\n                        this.$refs.tree.setCheckedKeys([]);\n                    }\n                },\n                data() {\n                    return {\n                        data: [{\n                                id: 1,\n                                label: 'Level one 1',\n                                children: [{\n                                        id: 4,\n                                        label: 'Level two 1-1',\n                                        children: [{\n                                                id: 9,\n                                                label: 'Level three 1-1-1'\n                                            }, {\n                                                id: 10,\n                                                label: 'Level three 1-1-2'\n                                            }]\n                                    }]\n                            }, {\n                                id: 2,\n                                label: 'Level one 2',\n                                children: [{\n                                        id: 5,\n                                        label: 'Level two 2-1'\n                                    }, {\n                                        id: 6,\n                                        label: 'Level two 2-2'\n                                    }]\n                            }, {\n                                id: 3,\n                                label: 'Level one 3',\n                                children: [{\n                                        id: 7,\n                                        label: 'Level two 3-1'\n                                    }, {\n                                        id: 8,\n                                        label: 'Level two 3-2'\n                                    }]\n                            }],\n                        defaultProps: {\n                            children: 'children',\n                            label: 'label'\n                        }\n                    };\n                }\n            };\n            return Object.assign({ render }, democomponentExport);\n        })(), \"element-demo6\": (function () {\n            const { createVNode: _createVNode, resolveComponent: _resolveComponent, toDisplayString: _toDisplayString, createTextVNode: _createTextVNode, withCtx: _withCtx, openBlock: _openBlock, createBlock: _createBlock } = vue__WEBPACK_IMPORTED_MODULE_0__;\n            const _hoisted_1 = { class: \"custom-tree-container\" };\n            const _hoisted_2 = { class: \"block\" };\n            const _hoisted_3 = _createVNode(\"p\", null, \"Using render-content\", -1);\n            const _hoisted_4 = { class: \"block\" };\n            const _hoisted_5 = _createVNode(\"p\", null, \"Using scoped slot\", -1);\n            const _hoisted_6 = {\n                class: \"custom-tree-node\",\n                \"slot-scope\": \"{ node, data }\"\n            };\n            const _hoisted_7 = _createTextVNode(\" Append \");\n            const _hoisted_8 = _createTextVNode(\" Delete \");\n            function render(_ctx, _cache) {\n                const _component_el_tree = _resolveComponent(\"el-tree\");\n                const _component_el_button = _resolveComponent(\"el-button\");\n                return (_openBlock(), _createBlock(\"div\", null, [\n                    _createVNode(\"div\", _hoisted_1, [\n                        _createVNode(\"div\", _hoisted_2, [\n                            _hoisted_3,\n                            _createVNode(_component_el_tree, {\n                                data: _ctx.data,\n                                \"show-checkbox\": \"\",\n                                \"node-key\": \"id\",\n                                \"default-expand-all\": \"\",\n                                \"expand-on-click-node\": false,\n                                \"render-content\": _ctx.renderContent\n                            }, null, 8, [\"data\", \"render-content\"])\n                        ]),\n                        _createVNode(\"div\", _hoisted_4, [\n                            _hoisted_5,\n                            _createVNode(_component_el_tree, {\n                                data: _ctx.data,\n                                \"show-checkbox\": \"\",\n                                \"node-key\": \"id\",\n                                \"default-expand-all\": \"\",\n                                \"expand-on-click-node\": false\n                            }, {\n                                default: _withCtx(() => [\n                                    _createVNode(\"span\", _hoisted_6, [\n                                        _createVNode(\"span\", null, _toDisplayString(_ctx.node.label), 1),\n                                        _createVNode(\"span\", null, [\n                                            _createVNode(_component_el_button, {\n                                                type: \"text\",\n                                                size: \"mini\",\n                                                onClick: _cache[1] || (_cache[1] = () => _ctx.append(_ctx.data))\n                                            }, {\n                                                default: _withCtx(() => [\n                                                    _hoisted_7\n                                                ]),\n                                                _: 1\n                                            }),\n                                            _createVNode(_component_el_button, {\n                                                type: \"text\",\n                                                size: \"mini\",\n                                                onClick: _cache[2] || (_cache[2] = () => _ctx.remove(_ctx.node, _ctx.data))\n                                            }, {\n                                                default: _withCtx(() => [\n                                                    _hoisted_8\n                                                ]),\n                                                _: 1\n                                            })\n                                        ])\n                                    ])\n                                ]),\n                                _: 1\n                            }, 8, [\"data\"])\n                        ])\n                    ])\n                ]));\n            }\n            let id = 1000;\n            const democomponentExport = {\n                data() {\n                    const data = [{\n                            id: 1,\n                            label: 'Level one 1',\n                            children: [{\n                                    id: 4,\n                                    label: 'Level two 1-1',\n                                    children: [{\n                                            id: 9,\n                                            label: 'Level three 1-1-1'\n                                        }, {\n                                            id: 10,\n                                            label: 'Level three 1-1-2'\n                                        }]\n                                }]\n                        }, {\n                            id: 2,\n                            label: 'Level one 2',\n                            children: [{\n                                    id: 5,\n                                    label: 'Level two 2-1'\n                                }, {\n                                    id: 6,\n                                    label: 'Level two 2-2'\n                                }]\n                        }, {\n                            id: 3,\n                            label: 'Level one 3',\n                            children: [{\n                                    id: 7,\n                                    label: 'Level two 3-1'\n                                }, {\n                                    id: 8,\n                                    label: 'Level two 3-2'\n                                }]\n                        }];\n                    return {\n                        data: JSON.parse(JSON.stringify(data)),\n                        data: JSON.parse(JSON.stringify(data))\n                    };\n                },\n                methods: {\n                    append(data) {\n                        const newChild = { id: id++, label: 'testtest', children: [] };\n                        if (!data.children) {\n                            this.$set(data, 'children', []);\n                        }\n                        data.children.push(newChild);\n                    },\n                    remove(node, data) {\n                        const parent = node.parent;\n                        const children = parent.data.children || parent.data;\n                        const index = children.findIndex(d => d.id === data.id);\n                        children.splice(index, 1);\n                    },\n                    renderContent(h, { node, data, store }) {\n                        return h(\"span\", {\n                            class: \"custom-tree-node\"\n                        }, h(\"span\", null, node.label), h(\"span\", null, h(\"el-button\", {\n                            size: \"mini\",\n                            type: \"text\",\n                            \"on-click\": this.append(data)\n                        }, \"Append\"), h(\"el-button\", {\n                            size: \"mini\",\n                            type: \"text\",\n                            \"on-click\": this.remove(node, data)\n                        }, \"Delete\")));\n                    }\n                }\n            };\n            return Object.assign({ render }, democomponentExport);\n        })(), \"element-demo7\": (function () {\n            const { resolveComponent: _resolveComponent, createVNode: _createVNode, openBlock: _openBlock, createBlock: _createBlock } = vue__WEBPACK_IMPORTED_MODULE_0__;\n            function render(_ctx, _cache) {\n                const _component_el_input = _resolveComponent(\"el-input\");\n                const _component_el_tree = _resolveComponent(\"el-tree\");\n                return (_openBlock(), _createBlock(\"div\", null, [\n                    _createVNode(_component_el_input, {\n                        placeholder: \"Filter keyword\",\n                        modelValue: _ctx.filterText,\n                        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => (_ctx.filterText = $event))\n                    }, null, 8, [\"modelValue\"]),\n                    _createVNode(_component_el_tree, {\n                        class: \"filter-tree\",\n                        data: _ctx.data,\n                        props: _ctx.defaultProps,\n                        \"default-expand-all\": \"\",\n                        \"filter-node-method\": _ctx.filterNode,\n                        ref: \"tree\"\n                    }, null, 8, [\"data\", \"props\", \"filter-node-method\"])\n                ]));\n            }\n            const democomponentExport = {\n                watch: {\n                    filterText(val) {\n                        this.$refs.tree.filter(val);\n                    }\n                },\n                methods: {\n                    filterNode(value, data) {\n                        if (!value)\n                            return true;\n                        return data.label.indexOf(value) !== -1;\n                    }\n                },\n                data() {\n                    return {\n                        filterText: '',\n                        data: [{\n                                id: 1,\n                                label: 'Level one 1',\n                                children: [{\n                                        id: 4,\n                                        label: 'Level two 1-1',\n                                        children: [{\n                                                id: 9,\n                                                label: 'Level three 1-1-1'\n                                            }, {\n                                                id: 10,\n                                                label: 'Level three 1-1-2'\n                                            }]\n                                    }]\n                            }, {\n                                id: 2,\n                                label: 'Level one 2',\n                                children: [{\n                                        id: 5,\n                                        label: 'Level two 2-1'\n                                    }, {\n                                        id: 6,\n                                        label: 'Level two 2-2'\n                                    }]\n                            }, {\n                                id: 3,\n                                label: 'Level one 3',\n                                children: [{\n                                        id: 7,\n                                        label: 'Level two 3-1'\n                                    }, {\n                                        id: 8,\n                                        label: 'Level two 3-2'\n                                    }]\n                            }],\n                        defaultProps: {\n                            children: 'children',\n                            label: 'label'\n                        }\n                    };\n                }\n            };\n            return Object.assign({ render }, democomponentExport);\n        })(), \"element-demo8\": (function () {\n            const { resolveComponent: _resolveComponent, createVNode: _createVNode, openBlock: _openBlock, createBlock: _createBlock } = vue__WEBPACK_IMPORTED_MODULE_0__;\n            function render(_ctx, _cache) {\n                const _component_el_tree = _resolveComponent(\"el-tree\");\n                return (_openBlock(), _createBlock(\"div\", null, [\n                    _createVNode(_component_el_tree, {\n                        data: _ctx.data,\n                        props: _ctx.defaultProps,\n                        accordion: \"\",\n                        \"onNode-click\": _ctx.handleNodeClick\n                    }, null, 8, [\"data\", \"props\", \"onNode-click\"])\n                ]));\n            }\n            const democomponentExport = {\n                data() {\n                    return {\n                        data: [{\n                                label: 'Level one 1',\n                                children: [{\n                                        label: 'Level two 1-1',\n                                        children: [{\n                                                label: 'Level three 1-1-1'\n                                            }]\n                                    }]\n                            }, {\n                                label: 'Level one 2',\n                                children: [{\n                                        label: 'Level two 2-1',\n                                        children: [{\n                                                label: 'Level three 2-1-1'\n                                            }]\n                                    }, {\n                                        label: 'Level two 2-2',\n                                        children: [{\n                                                label: 'Level three 2-2-1'\n                                            }]\n                                    }]\n                            }, {\n                                label: 'Level one 3',\n                                children: [{\n                                        label: 'Level two 3-1',\n                                        children: [{\n                                                label: 'Level three 3-1-1'\n                                            }]\n                                    }, {\n                                        label: 'Level two 3-2',\n                                        children: [{\n                                                label: 'Level three 3-2-1'\n                                            }]\n                                    }]\n                            }],\n                        defaultProps: {\n                            children: 'children',\n                            label: 'label'\n                        }\n                    };\n                },\n                methods: {\n                    handleNodeClick(data) {\n                        console.log(data);\n                    }\n                }\n            };\n            return Object.assign({ render }, democomponentExport);\n        })(), \"element-demo9\": (function () {\n            const { resolveComponent: _resolveComponent, createVNode: _createVNode, openBlock: _openBlock, createBlock: _createBlock } = vue__WEBPACK_IMPORTED_MODULE_0__;\n            function render(_ctx, _cache) {\n                const _component_el_tree = _resolveComponent(\"el-tree\");\n                return (_openBlock(), _createBlock(\"div\", null, [\n                    _createVNode(_component_el_tree, {\n                        data: _ctx.data,\n                        \"node-key\": \"id\",\n                        \"default-expand-all\": \"\",\n                        \"onNode-drag-start\": _ctx.handleDragStart,\n                        \"onNode-drag-enter\": _ctx.handleDragEnter,\n                        \"onNode-drag-leave\": _ctx.handleDragLeave,\n                        \"onNode-drag-over\": _ctx.handleDragOver,\n                        \"onNode-drag-end\": _ctx.handleDragEnd,\n                        \"onNode-drop\": _ctx.handleDrop,\n                        draggable: \"\",\n                        \"allow-drop\": _ctx.allowDrop,\n                        \"allow-drag\": _ctx.allowDrag\n                    }, null, 8, [\"data\", \"onNode-drag-start\", \"onNode-drag-enter\", \"onNode-drag-leave\", \"onNode-drag-over\", \"onNode-drag-end\", \"onNode-drop\", \"allow-drop\", \"allow-drag\"])\n                ]));\n            }\n            const democomponentExport = {\n                data() {\n                    return {\n                        data: [{\n                                label: 'Level one 1',\n                                children: [{\n                                        label: 'Level two 1-1',\n                                        children: [{\n                                                label: 'Level three 1-1-1'\n                                            }]\n                                    }]\n                            }, {\n                                label: 'Level one 2',\n                                children: [{\n                                        label: 'Level two 2-1',\n                                        children: [{\n                                                label: 'Level three 2-1-1'\n                                            }]\n                                    }, {\n                                        label: 'Level two 2-2',\n                                        children: [{\n                                                label: 'Level three 2-2-1'\n                                            }]\n                                    }]\n                            }, {\n                                label: 'Level one 3',\n                                children: [{\n                                        label: 'Level two 3-1',\n                                        children: [{\n                                                label: 'Level three 3-1-1'\n                                            }]\n                                    }, {\n                                        label: 'Level two 3-2',\n                                        children: [{\n                                                label: 'Level three 3-2-1'\n                                            }]\n                                    }]\n                            }],\n                        defaultProps: {\n                            children: 'children',\n                            label: 'label'\n                        }\n                    };\n                },\n                methods: {\n                    handleDragStart(node, ev) {\n                        console.log('drag start', node);\n                    },\n                    handleDragEnter(draggingNode, dropNode, ev) {\n                        console.log('tree drag enter: ', dropNode.label);\n                    },\n                    handleDragLeave(draggingNode, dropNode, ev) {\n                        console.log('tree drag leave: ', dropNode.label);\n                    },\n                    handleDragOver(draggingNode, dropNode, ev) {\n                        console.log('tree drag over: ', dropNode.label);\n                    },\n                    handleDragEnd(draggingNode, dropNode, dropType, ev) {\n                        console.log('tree drag end: ', dropNode && dropNode.label, dropType);\n                    },\n                    handleDrop(draggingNode, dropNode, dropType, ev) {\n                        console.log('tree drop: ', dropNode.label, dropType);\n                    },\n                    allowDrop(draggingNode, dropNode, type) {\n                        if (dropNode.data.label === 'Level two 3-1') {\n                            return type !== 'inner';\n                        }\n                        else {\n                            return true;\n                        }\n                    },\n                    allowDrag(draggingNode) {\n                        return draggingNode.data.label.indexOf('Level three 3-1-1') === -1;\n                    }\n                }\n            };\n            return Object.assign({ render }, democomponentExport);\n        })(),\n    }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/ts-loader/index.js?!./node_modules/vue-loader/dist/index.js?!./website/md-loader/index.js!./website/docs/en-US/tree.md?vue&type=script&lang=ts\n");

/***/ }),

/***/ "./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./website/md-loader/index.js!./website/docs/en-US/tree.md?vue&type=template&id=3075f4b0":
/*!****************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/dist/templateLoader.js??ref--5!./node_modules/vue-loader/dist??ref--3-0!./website/md-loader!./website/docs/en-US/tree.md?vue&type=template&id=3075f4b0 ***!
  \****************************************************************************************************************************************************************************************/
/*! exports provided: render */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ \"./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js\");\n\n\nconst _hoisted_1 = { class: \"content element-doc\" }\nconst _hoisted_2 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h2\", { id: \"tree\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#tree\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Tree\")\n], -1 /* HOISTED */)\nconst _hoisted_3 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Display a set of data with hierarchies.\", -1 /* HOISTED */)\nconst _hoisted_4 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"basic-usage\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#basic-usage\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Basic usage\")\n], -1 /* HOISTED */)\nconst _hoisted_5 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Basic tree structure.\", -1 /* HOISTED */)\nconst _hoisted_6 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-tree :data=\\\"data\\\" :props=\\\"defaultProps\\\" @node-click=\\\"handleNodeClick\\\"></el-tree>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        data: [{\\n          label: 'Level one 1',\\n          children: [{\\n            label: 'Level two 1-1',\\n            children: [{\\n              label: 'Level three 1-1-1'\\n            }]\\n          }]\\n        }, {\\n          label: 'Level one 2',\\n          children: [{\\n            label: 'Level two 2-1',\\n            children: [{\\n              label: 'Level three 2-1-1'\\n            }]\\n          }, {\\n            label: 'Level two 2-2',\\n            children: [{\\n              label: 'Level three 2-2-1'\\n            }]\\n          }]\\n        }, {\\n          label: 'Level one 3',\\n          children: [{\\n            label: 'Level two 3-1',\\n            children: [{\\n              label: 'Level three 3-1-1'\\n            }]\\n          }, {\\n            label: 'Level two 3-2',\\n            children: [{\\n              label: 'Level three 3-2-1'\\n            }]\\n          }]\\n        }],\\n        defaultProps: {\\n          children: 'children',\\n          label: 'label'\\n        }\\n      };\\n    },\\n    methods: {\\n      handleNodeClick(data) {\\n        console.log(data);\\n      }\\n    }\\n  };\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_7 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"selectable\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#selectable\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Selectable\")\n], -1 /* HOISTED */)\nconst _hoisted_8 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Used for node selection.\", -1 /* HOISTED */)\nconst _hoisted_9 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"This example also shows how to load node data asynchronously.\")\n], -1 /* HOISTED */)\nconst _hoisted_10 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-tree\\n  :props=\\\"props\\\"\\n  :load=\\\"loadNode\\\"\\n  lazy\\n  show-checkbox\\n  @check-change=\\\"handleCheckChange\\\">\\n</el-tree>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        props: {\\n          label: 'name',\\n          children: 'zones'\\n        },\\n        count: 1\\n      };\\n    },\\n    methods: {\\n      handleCheckChange(data, checked, indeterminate) {\\n        console.log(data, checked, indeterminate);\\n      },\\n      handleNodeClick(data) {\\n        console.log(data);\\n      },\\n      loadNode(node, resolve) {\\n        if (node.level === 0) {\\n          return resolve([{ name: 'Root1' }, { name: 'Root2' }]);\\n        }\\n        if (node.level > 3) return resolve([]);\\n\\n        var hasChild;\\n        if (node.data.name === 'region1') {\\n          hasChild = true;\\n        } else if (node.data.name === 'region2') {\\n          hasChild = false;\\n        } else {\\n          hasChild = Math.random() > 0.5;\\n        }\\n\\n        setTimeout(() => {\\n          var data;\\n          if (hasChild) {\\n            data = [{\\n              name: 'zone' + this.count++\\n            }, {\\n              name: 'zone' + this.count++\\n            }];\\n          } else {\\n            data = [];\\n          }\\n\\n          resolve(data);\\n        }, 500);\\n      }\\n    }\\n  };\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_11 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"custom-leaf-node-in-lazy-mode\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#custom-leaf-node-in-lazy-mode\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Custom leaf node in lazy mode\")\n], -1 /* HOISTED */)\nconst _hoisted_12 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"A node's data is not fetched until it is clicked, so the Tree cannot predict whether a node is a leaf node. That's why a drop-down button is added to each node, and if it is a leaf node, the drop-down button will disappear when clicked. That being said, you can also tell the Tree in advance whether the node is a leaf node, avoiding the render of the drop-down button before a leaf node.\")\n], -1 /* HOISTED */)\nconst _hoisted_13 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-tree\\n  :props=\\\"props\\\"\\n  :load=\\\"loadNode\\\"\\n  lazy\\n  show-checkbox>\\n</el-tree>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        props: {\\n          label: 'name',\\n          children: 'zones',\\n          isLeaf: 'leaf'\\n        },\\n      };\\n    },\\n    methods: {\\n      loadNode(node, resolve) {\\n        if (node.level === 0) {\\n          return resolve([{ name: 'region' }]);\\n        }\\n        if (node.level > 1) return resolve([]);\\n\\n        setTimeout(() => {\\n          const data = [{\\n            name: 'leaf',\\n            leaf: true\\n          }, {\\n            name: 'zone'\\n          }];\\n\\n          resolve(data);\\n        }, 500);\\n      }\\n    }\\n  };\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_14 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"disabled-checkbox\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#disabled-checkbox\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Disabled checkbox\")\n], -1 /* HOISTED */)\nconst _hoisted_15 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"The checkbox of a node can be set as disabled.\", -1 /* HOISTED */)\nconst _hoisted_16 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"In the example, 'disabled' property is declared in defaultProps, and some nodes are set as 'disabled:true'. The corresponding checkboxes are disabled and can't be clicked.\")\n], -1 /* HOISTED */)\nconst _hoisted_17 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-tree\\n  :data=\\\"data\\\"\\n  :props=\\\"defaultProps\\\"\\n  show-checkbox\\n  @check-change=\\\"handleCheckChange\\\">\\n</el-tree>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        data: [{\\n          id: 1,\\n          label: 'Level one 1',\\n          children: [{\\n            id: 3,\\n            label: 'Level two 2-1',\\n            children: [{\\n              id: 4,\\n              label: 'Level three 3-1-1'\\n            }, {\\n              id: 5,\\n              label: 'Level three 3-1-2',\\n              disabled: true\\n            }]\\n          }, {\\n            id: 2,\\n            label: 'Level two 2-2',\\n            disabled: true,\\n            children: [{\\n              id: 6,\\n              label: 'Level three 3-2-1'\\n            }, {\\n              id: 7,\\n              label: 'Level three 3-2-2',\\n              disabled: true\\n            }]\\n          }]\\n        }],\\n        defaultProps: {\\n            children: 'children',\\n            label: 'label',\\n            disabled: 'disabled',\\n        },\\n      };\\n    }\\n  };\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_18 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"default-expanded-and-default-checked\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#default-expanded-and-default-checked\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Default expanded and default checked\")\n], -1 /* HOISTED */)\nconst _hoisted_19 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Tree nodes can be initially expanded or checked\", -1 /* HOISTED */)\nconst _hoisted_20 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Use \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"default-expanded-keys\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" and \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"default-checked-keys\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" to set initially expanded and initially checked nodes respectively. Note that for them to work, \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"node-key\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" is required. Its value is the name of a key in the data object, and the value of that key should be unique across the whole tree.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_21 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-tree\\n  :data=\\\"data\\\"\\n  show-checkbox\\n  node-key=\\\"id\\\"\\n  :default-expanded-keys=\\\"[2, 3]\\\"\\n  :default-checked-keys=\\\"[5]\\\"\\n  :props=\\\"defaultProps\\\">\\n</el-tree>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        data: [{\\n          id: 1,\\n          label: 'Level one 1',\\n          children: [{\\n            id: 4,\\n            label: 'Level two 1-1',\\n            children: [{\\n              id: 9,\\n              label: 'Level three 1-1-1'\\n            }, {\\n              id: 10,\\n              label: 'Level three 1-1-2'\\n            }]\\n          }]\\n        }, {\\n          id: 2,\\n          label: 'Level one 2',\\n          children: [{\\n            id: 5,\\n            label: 'Level two 2-1'\\n          }, {\\n            id: 6,\\n            label: 'Level two 2-2'\\n          }]\\n        }, {\\n          id: 3,\\n          label: 'Level one 3',\\n          children: [{\\n            id: 7,\\n            label: 'Level two 3-1'\\n          }, {\\n            id: 8,\\n            label: 'Level two 3-2'\\n          }]\\n        }],\\n        defaultProps: {\\n          children: 'children',\\n          label: 'label'\\n        }\\n      };\\n    }\\n  };\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_22 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"checking-tree-nodes\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#checking-tree-nodes\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Checking tree nodes\")\n], -1 /* HOISTED */)\nconst _hoisted_23 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"This example shows how to get and set checked nodes. They both can be done in two approaches: node and key. If you are taking the key approach, \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"node-key\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" is required.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_24 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-tree\\n  :data=\\\"data\\\"\\n  show-checkbox\\n  default-expand-all\\n  node-key=\\\"id\\\"\\n  ref=\\\"tree\\\"\\n  highlight-current\\n  :props=\\\"defaultProps\\\">\\n</el-tree>\\n\\n<div class=\\\"buttons\\\">\\n  <el-button @click=\\\"getCheckedNodes\\\">get by node</el-button>\\n  <el-button @click=\\\"getCheckedKeys\\\">get by key</el-button>\\n  <el-button @click=\\\"setCheckedNodes\\\">set by node</el-button>\\n  <el-button @click=\\\"setCheckedKeys\\\">set by key</el-button>\\n  <el-button @click=\\\"resetChecked\\\">reset</el-button>\\n</div>\\n\\n<script>\\n  export default {\\n    methods: {\\n      getCheckedNodes() {\\n        console.log(this.$refs.tree.getCheckedNodes());\\n      },\\n      getCheckedKeys() {\\n        console.log(this.$refs.tree.getCheckedKeys());\\n      },\\n      setCheckedNodes() {\\n        this.$refs.tree.setCheckedNodes([{\\n          id: 5,\\n          label: 'Level two 2-1'\\n        }, {\\n          id: 9,\\n          label: 'Level three 1-1-1'\\n        }]);\\n      },\\n      setCheckedKeys() {\\n        this.$refs.tree.setCheckedKeys([3]);\\n      },\\n      resetChecked() {\\n        this.$refs.tree.setCheckedKeys([]);\\n      }\\n    },\\n\\n    data() {\\n      return {\\n        data: [{\\n          id: 1,\\n          label: 'Level one 1',\\n          children: [{\\n            id: 4,\\n            label: 'Level two 1-1',\\n            children: [{\\n              id: 9,\\n              label: 'Level three 1-1-1'\\n            }, {\\n              id: 10,\\n              label: 'Level three 1-1-2'\\n            }]\\n          }]\\n        }, {\\n          id: 2,\\n          label: 'Level one 2',\\n          children: [{\\n            id: 5,\\n            label: 'Level two 2-1'\\n          }, {\\n            id: 6,\\n            label: 'Level two 2-2'\\n          }]\\n        }, {\\n          id: 3,\\n          label: 'Level one 3',\\n          children: [{\\n            id: 7,\\n            label: 'Level two 3-1'\\n          }, {\\n            id: 8,\\n            label: 'Level two 3-2'\\n          }]\\n        }],\\n        defaultProps: {\\n          children: 'children',\\n          label: 'label'\\n        }\\n      };\\n    }\\n  };\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_25 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"custom-node-content\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#custom-node-content\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Custom node content\")\n], -1 /* HOISTED */)\nconst _hoisted_26 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"The content of tree nodes can be customized, so you can add icons or buttons as you will\", -1 /* HOISTED */)\nconst _hoisted_27 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"There are two ways to customize template for tree nodes: \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"render-content\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" and scoped slot. Use \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"render-content\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" to assign a render function that returns the content of tree nodes. See Vue's documentation for a detailed introduction of render functions. If you prefer scoped slot, you'll have access to \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"node\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" and \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"data\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" in the scope, standing for the TreeNode object and node data of the current node respectively. Note that the \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"render-content\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" demo can't run in jsfiddle because it doesn't support JSX syntax. In a real project, \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"render-content\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" will work if relevant dependencies are correctly configured.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_28 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<div class=\\\"custom-tree-container\\\">\\n  <div class=\\\"block\\\">\\n    <p>Using render-content</p>\\n    <el-tree\\n      :data=\\\"data\\\"\\n      show-checkbox\\n      node-key=\\\"id\\\"\\n      default-expand-all\\n      :expand-on-click-node=\\\"false\\\"\\n      :render-content=\\\"renderContent\\\">\\n    </el-tree>\\n  </div>\\n  <div class=\\\"block\\\">\\n    <p>Using scoped slot</p>\\n    <el-tree\\n      :data=\\\"data\\\"\\n      show-checkbox\\n      node-key=\\\"id\\\"\\n      default-expand-all\\n      :expand-on-click-node=\\\"false\\\">\\n      <span class=\\\"custom-tree-node\\\" slot-scope=\\\"{ node, data }\\\">\\n        <span>{{ node.label }}</span>\\n        <span>\\n          <el-button\\n            type=\\\"text\\\"\\n            size=\\\"mini\\\"\\n            @click=\\\"() => append(data)\\\">\\n            Append\\n          </el-button>\\n          <el-button\\n            type=\\\"text\\\"\\n            size=\\\"mini\\\"\\n            @click=\\\"() => remove(node, data)\\\">\\n            Delete\\n          </el-button>\\n        </span>\\n      </span>\\n    </el-tree>\\n  </div>\\n</div>\\n\\n<script>\\n  let id = 1000;\\n\\n  export default {\\n    data() {\\n      const data = [{\\n        id: 1,\\n        label: 'Level one 1',\\n        children: [{\\n          id: 4,\\n          label: 'Level two 1-1',\\n          children: [{\\n            id: 9,\\n            label: 'Level three 1-1-1'\\n          }, {\\n            id: 10,\\n            label: 'Level three 1-1-2'\\n          }]\\n        }]\\n      }, {\\n        id: 2,\\n        label: 'Level one 2',\\n        children: [{\\n          id: 5,\\n          label: 'Level two 2-1'\\n        }, {\\n          id: 6,\\n          label: 'Level two 2-2'\\n        }]\\n      }, {\\n        id: 3,\\n        label: 'Level one 3',\\n        children: [{\\n          id: 7,\\n          label: 'Level two 3-1'\\n        }, {\\n          id: 8,\\n          label: 'Level two 3-2'\\n        }]\\n      }];\\n      return {\\n        data: JSON.parse(JSON.stringify(data)),\\n        data: JSON.parse(JSON.stringify(data))\\n      }\\n    },\\n\\n    methods: {\\n      append(data) {\\n        const newChild = { id: id++, label: 'testtest', children: [] };\\n        if (!data.children) {\\n          this.$set(data, 'children', []);\\n        }\\n        data.children.push(newChild);\\n      },\\n\\n      remove(node, data) {\\n        const parent = node.parent;\\n        const children = parent.data.children || parent.data;\\n        const index = children.findIndex(d => d.id === data.id);\\n        children.splice(index, 1);\\n      },\\n\\n      renderContent(h, { node, data, store }) {\\n        return h(\\\"span\\\", {\\n          class: \\\"custom-tree-node\\\"\\n        }, h(\\\"span\\\", null, node.label), h(\\\"span\\\", null, h(\\\"el-button\\\", {\\n          size: \\\"mini\\\",\\n          type: \\\"text\\\",\\n          \\\"on-click\\\":this.append(data)\\n        }, \\\"Append\\\"), h(\\\"el-button\\\", {\\n          size: \\\"mini\\\",\\n          type: \\\"text\\\",\\n          \\\"on-click\\\": this.remove(node, data)\\n        }, \\\"Delete\\\")))\\n      }\\n    }\\n  };\\n</script>\\n\\n<style>\\n  .custom-tree-node {\\n    flex: 1;\\n    display: flex;\\n    align-items: center;\\n    justify-content: space-between;\\n    font-size: 14px;\\n    padding-right: 8px;\\n  }\\n</style>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_29 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"tree-node-filtering\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#tree-node-filtering\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Tree node filtering\")\n], -1 /* HOISTED */)\nconst _hoisted_30 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Tree nodes can be filtered\", -1 /* HOISTED */)\nconst _hoisted_31 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"div\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"Invoke the \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"filter\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" method of the Tree instance to filter tree nodes. Its parameter is the filtering keyword. Note that for it to work, \"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"filter-node-method\"),\n    /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" is required, and its value is the filtering method.\")\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_32 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-input\\n  placeholder=\\\"Filter keyword\\\"\\n  v-model=\\\"filterText\\\">\\n</el-input>\\n\\n<el-tree\\n  class=\\\"filter-tree\\\"\\n  :data=\\\"data\\\"\\n  :props=\\\"defaultProps\\\"\\n  default-expand-all\\n  :filter-node-method=\\\"filterNode\\\"\\n  ref=\\\"tree\\\">\\n</el-tree>\\n\\n<script>\\n  export default {\\n    watch: {\\n      filterText(val) {\\n        this.$refs.tree.filter(val);\\n      }\\n    },\\n\\n    methods: {\\n      filterNode(value, data) {\\n        if (!value) return true;\\n        return data.label.indexOf(value) !== -1;\\n      }\\n    },\\n\\n    data() {\\n      return {\\n        filterText: '',\\n        data: [{\\n          id: 1,\\n          label: 'Level one 1',\\n          children: [{\\n            id: 4,\\n            label: 'Level two 1-1',\\n            children: [{\\n              id: 9,\\n              label: 'Level three 1-1-1'\\n            }, {\\n              id: 10,\\n              label: 'Level three 1-1-2'\\n            }]\\n          }]\\n        }, {\\n          id: 2,\\n          label: 'Level one 2',\\n          children: [{\\n            id: 5,\\n            label: 'Level two 2-1'\\n          }, {\\n            id: 6,\\n            label: 'Level two 2-2'\\n          }]\\n        }, {\\n          id: 3,\\n          label: 'Level one 3',\\n          children: [{\\n            id: 7,\\n            label: 'Level two 3-1'\\n          }, {\\n            id: 8,\\n            label: 'Level two 3-2'\\n          }]\\n        }],\\n        defaultProps: {\\n          children: 'children',\\n          label: 'label'\\n        }\\n      };\\n    }\\n  };\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_33 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"accordion\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#accordion\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Accordion\")\n], -1 /* HOISTED */)\nconst _hoisted_34 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, \"Only one node among the same level can be expanded at one time.\", -1 /* HOISTED */)\nconst _hoisted_35 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-tree\\n  :data=\\\"data\\\"\\n  :props=\\\"defaultProps\\\"\\n  accordion\\n  @node-click=\\\"handleNodeClick\\\">\\n</el-tree>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        data: [{\\n          label: 'Level one 1',\\n          children: [{\\n            label: 'Level two 1-1',\\n            children: [{\\n              label: 'Level three 1-1-1'\\n            }]\\n          }]\\n        }, {\\n          label: 'Level one 2',\\n          children: [{\\n            label: 'Level two 2-1',\\n            children: [{\\n              label: 'Level three 2-1-1'\\n            }]\\n          }, {\\n            label: 'Level two 2-2',\\n            children: [{\\n              label: 'Level three 2-2-1'\\n            }]\\n          }]\\n        }, {\\n          label: 'Level one 3',\\n          children: [{\\n            label: 'Level two 3-1',\\n            children: [{\\n              label: 'Level three 3-1-1'\\n            }]\\n          }, {\\n            label: 'Level two 3-2',\\n            children: [{\\n              label: 'Level three 3-2-1'\\n            }]\\n          }]\\n        }],\\n        defaultProps: {\\n          children: 'children',\\n          label: 'label'\\n        }\\n      };\\n    },\\n    methods: {\\n      handleNodeClick(data) {\\n        console.log(data);\\n      }\\n    }\\n  };\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_36 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"h3\", { id: \"draggable\" }, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"a\", {\n    class: \"header-anchor\",\n    href: \"#draggable\"\n  }, \"¶\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" Draggable\")\n], -1 /* HOISTED */)\nconst _hoisted_37 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"p\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\"You can drag and drop Tree nodes by adding a \"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", null, \"draggable\"),\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createTextVNode\"])(\" attribute.\")\n], -1 /* HOISTED */)\nconst _hoisted_38 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"pre\", null, [\n  /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(\"code\", { class: \"html\" }, \"<el-tree\\n  :data=\\\"data\\\"\\n  node-key=\\\"id\\\"\\n  default-expand-all\\n  @node-drag-start=\\\"handleDragStart\\\"\\n  @node-drag-enter=\\\"handleDragEnter\\\"\\n  @node-drag-leave=\\\"handleDragLeave\\\"\\n  @node-drag-over=\\\"handleDragOver\\\"\\n  @node-drag-end=\\\"handleDragEnd\\\"\\n  @node-drop=\\\"handleDrop\\\"\\n  draggable\\n  :allow-drop=\\\"allowDrop\\\"\\n  :allow-drag=\\\"allowDrag\\\">\\n</el-tree>\\n\\n<script>\\n  export default {\\n    data() {\\n      return {\\n        data: [{\\n          label: 'Level one 1',\\n          children: [{\\n            label: 'Level two 1-1',\\n            children: [{\\n              label: 'Level three 1-1-1'\\n            }]\\n          }]\\n        }, {\\n          label: 'Level one 2',\\n          children: [{\\n            label: 'Level two 2-1',\\n            children: [{\\n              label: 'Level three 2-1-1'\\n            }]\\n          }, {\\n            label: 'Level two 2-2',\\n            children: [{\\n              label: 'Level three 2-2-1'\\n            }]\\n          }]\\n        }, {\\n          label: 'Level one 3',\\n          children: [{\\n            label: 'Level two 3-1',\\n            children: [{\\n              label: 'Level three 3-1-1'\\n            }]\\n          }, {\\n            label: 'Level two 3-2',\\n            children: [{\\n              label: 'Level three 3-2-1'\\n            }]\\n          }]\\n        }],\\n        defaultProps: {\\n          children: 'children',\\n          label: 'label'\\n        }\\n      };\\n    },\\n    methods: {\\n      handleDragStart(node, ev) {\\n        console.log('drag start', node);\\n      },\\n      handleDragEnter(draggingNode, dropNode, ev) {\\n        console.log('tree drag enter: ', dropNode.label);\\n      },\\n      handleDragLeave(draggingNode, dropNode, ev) {\\n        console.log('tree drag leave: ', dropNode.label);\\n      },\\n      handleDragOver(draggingNode, dropNode, ev) {\\n        console.log('tree drag over: ', dropNode.label);\\n      },\\n      handleDragEnd(draggingNode, dropNode, dropType, ev) {\\n        console.log('tree drag end: ', dropNode && dropNode.label, dropType);\\n      },\\n      handleDrop(draggingNode, dropNode, dropType, ev) {\\n        console.log('tree drop: ', dropNode.label, dropType);\\n      },\\n      allowDrop(draggingNode, dropNode, type) {\\n        if (dropNode.data.label === 'Level two 3-1') {\\n          return type !== 'inner';\\n        } else {\\n          return true;\\n        }\\n      },\\n      allowDrag(draggingNode) {\\n        return draggingNode.data.label.indexOf('Level three 3-1-1') === -1;\\n      }\\n    }\\n  };\\n</script>\\n\")\n], -1 /* HOISTED */)\nconst _hoisted_39 = /*#__PURE__*/Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createStaticVNode\"])(\"<h3 id=\\\"attributes\\\"><a class=\\\"header-anchor\\\" href=\\\"#attributes\\\">¶</a> Attributes</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Accepted Values</th><th>Default</th></tr></thead><tbody><tr><td>data</td><td>tree data</td><td>array</td><td>—</td><td>—</td></tr><tr><td>empty-text</td><td>text displayed when data is void</td><td>string</td><td>—</td><td>—</td></tr><tr><td>node-key</td><td>unique identity key name for nodes, its value should be unique across the whole tree</td><td>string</td><td>—</td><td>—</td></tr><tr><td>props</td><td>configuration options, see the following table</td><td>object</td><td>—</td><td>—</td></tr><tr><td>render-after-expand</td><td>whether to render child nodes only after a parent node is expanded for the first time</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>load</td><td>method for loading subtree data, only works when <code>lazy</code> is true</td><td>function(node, resolve)</td><td>—</td><td>—</td></tr><tr><td>render-content</td><td>render function for tree node</td><td>Function(h, { node, data, store }</td><td>—</td><td>—</td></tr><tr><td>highlight-current</td><td>whether current node is highlighted</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>default-expand-all</td><td>whether to expand all nodes by default</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>expand-on-click-node</td><td>whether to expand or collapse node when clicking on the node, if false, then expand or collapse node only when clicking on the arrow icon.</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>check-on-click-node</td><td>whether to check or uncheck node when clicking on the node, if false, the node can only be checked or unchecked by clicking on the checkbox.</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>auto-expand-parent</td><td>whether to expand father node when a child node is expanded</td><td>boolean</td><td>—</td><td>true</td></tr><tr><td>default-expanded-keys</td><td>array of keys of initially expanded nodes</td><td>array</td><td>—</td><td>—</td></tr><tr><td>show-checkbox</td><td>whether node is selectable</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>check-strictly</td><td>whether checked state of a node not affects its father and child nodes when <code>show-checkbox</code> is <code>true</code></td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>default-checked-keys</td><td>array of keys of initially checked nodes</td><td>array</td><td>—</td><td>—</td></tr><tr><td>current-node-key</td><td>key of initially selected node</td><td>string, number</td><td>—</td><td>—</td></tr><tr><td>filter-node-method</td><td>this function will be executed on each node when use filter method. if return <code>false</code>, tree node will be hidden.</td><td>Function(value, data, node)</td><td>—</td><td>—</td></tr><tr><td>accordion</td><td>whether only one node among the same level can be expanded at one time</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>indent</td><td>horizontal indentation of nodes in adjacent levels in pixels</td><td>number</td><td>—</td><td>16</td></tr><tr><td>icon-class</td><td>custome tree node icon</td><td>string</td><td>-</td><td>-</td></tr><tr><td>lazy</td><td>whether to lazy load leaf node, used with <code>load</code> attribute</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>draggable</td><td>whether enable tree nodes drag and drop</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>allow-drag</td><td>this function will be executed before dragging a node. If <code>false</code> is returned, the node can not be dragged</td><td>Function(node)</td><td>—</td><td>—</td></tr><tr><td>allow-drop</td><td>this function will be executed before the dragging node is dropped. If <code>false</code> is returned, the dragging node can not be dropped at the target node. <code>type</code> has three possible values: &#39;prev&#39; (inserting the dragging node before the target node), &#39;inner&#39; (inserting the dragging node to the target node) and &#39;next&#39; (inserting the dragging node after the target node)</td><td>Function(draggingNode, dropNode, type)</td><td>—</td><td>—</td></tr></tbody></table><h3 id=\\\"props\\\"><a class=\\\"header-anchor\\\" href=\\\"#props\\\">¶</a> props</h3><table><thead><tr><th>Attribute</th><th>Description</th><th>Type</th><th>Accepted Values</th><th>Default</th></tr></thead><tbody><tr><td>label</td><td>specify which key of node object is used as the node&#39;s label</td><td>string, function(data, node)</td><td>—</td><td>—</td></tr><tr><td>children</td><td>specify which node object is used as the node&#39;s subtree</td><td>string</td><td>—</td><td>—</td></tr><tr><td>disabled</td><td>specify which key of node object represents if node&#39;s checkbox is disabled</td><td>boolean, function(data, node)</td><td>—</td><td>—</td></tr><tr><td>isLeaf</td><td>specify whether the node is a leaf node, only works when lazy load is enabled</td><td>boolean, function(data, node)</td><td>—</td><td>—</td></tr></tbody></table><h3 id=\\\"method\\\"><a class=\\\"header-anchor\\\" href=\\\"#method\\\">¶</a> Method</h3><p><code>Tree</code> has the following method, which returns the currently selected array of nodes.</p><table><thead><tr><th>Method</th><th>Description</th><th>Parameters</th></tr></thead><tbody><tr><td>filter</td><td>filter all tree nodes, filtered nodes will be hidden</td><td>Accept a parameter which will be used as first parameter for filter-node-method</td></tr><tr><td>updateKeyChildren</td><td>set new data to node, only works when <code>node-key</code> is assigned</td><td>(key, data) Accept two parameters: 1. key of node 2. new data</td></tr><tr><td>getCheckedNodes</td><td>If the node can be selected (<code>show-checkbox</code> is <code>true</code>), it returns the currently selected array of nodes</td><td>(leafOnly, includeHalfChecked) Accept two boolean type parameters: 1. default value is <code>false</code>. If the parameter is <code>true</code>, it only returns the currently selected array of sub-nodes. 2. default value is <code>false</code>. If the parameter is <code>true</code>, the return value contains halfchecked nodes</td></tr><tr><td>setCheckedNodes</td><td>set certain nodes to be checked, only works when <code>node-key</code> is assigned</td><td>an array of nodes to be checked</td></tr><tr><td>getCheckedKeys</td><td>If the node can be selected (<code>show-checkbox</code> is <code>true</code>), it returns the currently selected array of node&#39;s keys</td><td>(leafOnly) Accept a boolean type parameter whose default value is <code>false</code>. If the parameter is <code>true</code>, it only returns the currently selected array of sub-nodes.</td></tr><tr><td>setCheckedKeys</td><td>set certain nodes to be checked, only works when <code>node-key</code> is assigned</td><td>(keys, leafOnly) Accept two parameters: 1. an array of node&#39;s keys to be checked 2. a boolean type parameter whose default value is <code>false</code>. If the parameter is <code>true</code>, it only returns the currently selected array of sub-nodes.</td></tr><tr><td>setChecked</td><td>set node to be checked or not, only works when <code>node-key</code> is assigned</td><td>(key/data, checked, deep) Accept three parameters: 1. node&#39;s key or data to be checked 2. a boolean typed parameter indicating checked or not. 3. a boolean typed parameter indicating deep or not.</td></tr><tr><td>getHalfCheckedNodes</td><td>If the node can be selected (<code>show-checkbox</code> is <code>true</code>), it returns the currently half selected array of nodes</td><td>-</td></tr><tr><td>getHalfCheckedKeys</td><td>If the node can be selected (<code>show-checkbox</code> is <code>true</code>), it returns the currently half selected array of node&#39;s keys</td><td>-</td></tr><tr><td>getCurrentKey</td><td>return the highlight node&#39;s key (null if no node is highlighted)</td><td>—</td></tr><tr><td>getCurrentNode</td><td>return the highlight node&#39;s data (null if no node is highlighted)</td><td>—</td></tr><tr><td>setCurrentKey</td><td>set highlighted node by key, only works when <code>node-key</code> is assigned</td><td>(key) the node&#39;s key to be highlighted. If <code>null</code>, cancel the currently highlighted node</td></tr><tr><td>setCurrentNode</td><td>set highlighted node, only works when <code>node-key</code> is assigned</td><td>(node) the node to be highlighted</td></tr><tr><td>getNode</td><td>get node by data or key</td><td>(data) the node&#39;s data or key</td></tr><tr><td>remove</td><td>remove a node, only works when node-key is assigned</td><td>(data) the node&#39;s data or node to be deleted</td></tr><tr><td>append</td><td>append a child node to a given node in the tree</td><td>(data, parentNode) 1. child node&#39;s data to be appended 2. parent node&#39;s data, key or node</td></tr><tr><td>insertBefore</td><td>insert a node before a given node in the tree</td><td>(data, refNode) 1. node&#39;s data to be inserted 2. reference node&#39;s data, key or node</td></tr><tr><td>insertAfter</td><td>insert a node after a given node in the tree</td><td>(data, refNode) 1. node&#39;s data to be inserted 2. reference node&#39;s data, key or node</td></tr></tbody></table><h3 id=\\\"events\\\"><a class=\\\"header-anchor\\\" href=\\\"#events\\\">¶</a> Events</h3><table><thead><tr><th>Event Name</th><th>Description</th><th>Parameters</th></tr></thead><tbody><tr><td>node-click</td><td>triggers when a node is clicked</td><td>three parameters: node object corresponding to the node clicked, <code>node</code> property of TreeNode, TreeNode itself</td></tr><tr><td>node-contextmenu</td><td>triggers when a node is clicked by right button</td><td>four parameters: event, node object corresponding to the node clicked, <code>node</code> property of TreeNode, TreeNode itself</td></tr><tr><td>check-change</td><td>triggers when the selected state of the node changes</td><td>three parameters: node object corresponding to the node whose selected state is changed, whether the node is selected, whether node&#39;s subtree has selected nodes</td></tr><tr><td>check</td><td>triggers after clicking the checkbox of a node</td><td>two parameters: node object corresponding to the node that is checked / unchecked, tree checked status object which has four props: checkedNodes, checkedKeys, halfCheckedNodes, halfCheckedKeys</td></tr><tr><td>current-change</td><td>triggers when current node changes</td><td>two parameters: node object corresponding to the current node, <code>node</code> property of TreeNode</td></tr><tr><td>node-expand</td><td>triggers when current node open</td><td>three parameters: node object corresponding to the node opened, <code>node</code> property of TreeNode, TreeNode itself</td></tr><tr><td>node-collapse</td><td>triggers when current node close</td><td>three parameters: node object corresponding to the node closed, <code>node</code> property of TreeNode, TreeNode itself</td></tr><tr><td>node-drag-start</td><td>triggers when dragging starts</td><td>two parameters: node object corresponding to the dragging node, event.</td></tr><tr><td>node-drag-enter</td><td>triggers when the dragging node enters another node</td><td>three parameters: node object corresponding to the dragging node, node object corresponding to the entering node, event.</td></tr><tr><td>node-drag-leave</td><td>triggers when the dragging node leaves a node</td><td>three parameters: node object corresponding to the dragging node, node object corresponding to the leaving node, event.</td></tr><tr><td>node-drag-over</td><td>triggers when dragging over a node (like mouseover event)</td><td>three parameters: node object corresponding to the dragging node, node object corresponding to the dragging over node, event.</td></tr><tr><td>node-drag-end</td><td>triggers when dragging ends</td><td>four parameters: node object corresponding to the dragging node, node object corresponding to the dragging end node (may be <code>undefined</code>), node drop type (before / after / inner), event.</td></tr><tr><td>node-drop</td><td>triggers after the dragging node is dropped</td><td>four parameters: node object corresponding to the dragging node, node object corresponding to the dropped node, node drop type (before / after / inner), event.</td></tr></tbody></table><h3 id=\\\"scoped-slot\\\"><a class=\\\"header-anchor\\\" href=\\\"#scoped-slot\\\">¶</a> Scoped Slot</h3><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>—</td><td>Custom content for tree nodes. The scope parameter is { node, data }</td></tr></tbody></table>\", 11)\n\nfunction render(_ctx, _cache) {\n  const _component_element_demo0 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo0\")\n  const _component_demo_block = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"demo-block\")\n  const _component_element_demo1 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo1\")\n  const _component_element_demo2 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo2\")\n  const _component_element_demo3 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo3\")\n  const _component_element_demo4 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo4\")\n  const _component_element_demo5 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo5\")\n  const _component_element_demo6 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo6\")\n  const _component_element_demo7 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo7\")\n  const _component_element_demo8 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo8\")\n  const _component_element_demo9 = Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"resolveComponent\"])(\"element-demo9\")\n\n  return (Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"openBlock\"])(), Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createBlock\"])(\"section\", _hoisted_1, [\n    _hoisted_2,\n    _hoisted_3,\n    _hoisted_4,\n    _hoisted_5,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo0)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_6\n      ]),\n      _: 1\n    }),\n    _hoisted_7,\n    _hoisted_8,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo1)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_10\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_9\n      ]),\n      _: 1\n    }),\n    _hoisted_11,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo2)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_13\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_12\n      ]),\n      _: 1\n    }),\n    _hoisted_14,\n    _hoisted_15,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo3)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_17\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_16\n      ]),\n      _: 1\n    }),\n    _hoisted_18,\n    _hoisted_19,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo4)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_21\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_20\n      ]),\n      _: 1\n    }),\n    _hoisted_22,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo5)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_24\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_23\n      ]),\n      _: 1\n    }),\n    _hoisted_25,\n    _hoisted_26,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo6)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_28\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_27\n      ]),\n      _: 1\n    }),\n    _hoisted_29,\n    _hoisted_30,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo7)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_32\n      ]),\n      default: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_31\n      ]),\n      _: 1\n    }),\n    _hoisted_33,\n    _hoisted_34,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo8)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_35\n      ]),\n      _: 1\n    }),\n    _hoisted_36,\n    _hoisted_37,\n    Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_demo_block, null, {\n      source: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"createVNode\"])(_component_element_demo9)\n      ]),\n      highlight: Object(vue__WEBPACK_IMPORTED_MODULE_0__[\"withCtx\"])(() => [\n        _hoisted_38\n      ]),\n      _: 1\n    }),\n    _hoisted_39\n  ]))\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./website/md-loader/index.js!./website/docs/en-US/tree.md?vue&type=template&id=3075f4b0\n");

/***/ }),

/***/ "./website/docs/en-US/tree.md":
/*!************************************!*\
  !*** ./website/docs/en-US/tree.md ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _tree_md_vue_type_template_id_3075f4b0__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tree.md?vue&type=template&id=3075f4b0 */ \"./website/docs/en-US/tree.md?vue&type=template&id=3075f4b0\");\n/* harmony import */ var _tree_md_vue_type_script_lang_ts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tree.md?vue&type=script&lang=ts */ \"./website/docs/en-US/tree.md?vue&type=script&lang=ts\");\n/* empty/unused harmony star reexport */\n\n\n_tree_md_vue_type_script_lang_ts__WEBPACK_IMPORTED_MODULE_1__[\"default\"].render = _tree_md_vue_type_template_id_3075f4b0__WEBPACK_IMPORTED_MODULE_0__[\"render\"]\n/* hot reload */\nif (false) {}\n\n_tree_md_vue_type_script_lang_ts__WEBPACK_IMPORTED_MODULE_1__[\"default\"].__file = \"website/docs/en-US/tree.md\"\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (_tree_md_vue_type_script_lang_ts__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi93ZWJzaXRlL2RvY3MvZW4tVVMvdHJlZS5tZC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3dlYnNpdGUvZG9jcy9lbi1VUy90cmVlLm1kP2YwYzEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVuZGVyIH0gZnJvbSBcIi4vdHJlZS5tZD92dWUmdHlwZT10ZW1wbGF0ZSZpZD0zMDc1ZjRiMFwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL3RyZWUubWQ/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9dHNcIlxuZXhwb3J0ICogZnJvbSBcIi4vdHJlZS5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz10c1wiXG5zY3JpcHQucmVuZGVyID0gcmVuZGVyXG4vKiBob3QgcmVsb2FkICovXG5pZiAobW9kdWxlLmhvdCkge1xuICBzY3JpcHQuX19obXJJZCA9IFwiMzA3NWY0YjBcIlxuICBjb25zdCBhcGkgPSBfX1ZVRV9ITVJfUlVOVElNRV9fXG4gIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgaWYgKCFhcGkuY3JlYXRlUmVjb3JkKCczMDc1ZjRiMCcsIHNjcmlwdCkpIHtcbiAgICBhcGkucmVsb2FkKCczMDc1ZjRiMCcsIHNjcmlwdClcbiAgfVxuICBcbiAgbW9kdWxlLmhvdC5hY2NlcHQoXCIuL3RyZWUubWQ/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MzA3NWY0YjBcIiwgKCkgPT4ge1xuICAgIGFwaS5yZXJlbmRlcignMzA3NWY0YjAnLCByZW5kZXIpXG4gIH0pXG5cbn1cblxuc2NyaXB0Ll9fZmlsZSA9IFwid2Vic2l0ZS9kb2NzL2VuLVVTL3RyZWUubWRcIlxuXG5leHBvcnQgZGVmYXVsdCBzY3JpcHQiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQVlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./website/docs/en-US/tree.md\n");

/***/ }),

/***/ "./website/docs/en-US/tree.md?vue&type=script&lang=ts":
/*!************************************************************!*\
  !*** ./website/docs/en-US/tree.md?vue&type=script&lang=ts ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_ts_loader_index_js_ref_2_node_modules_vue_loader_dist_index_js_ref_3_0_md_loader_index_js_tree_md_vue_type_script_lang_ts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/ts-loader??ref--2!../../../node_modules/vue-loader/dist??ref--3-0!../../md-loader!./tree.md?vue&type=script&lang=ts */ \"./node_modules/ts-loader/index.js?!./node_modules/vue-loader/dist/index.js?!./website/md-loader/index.js!./website/docs/en-US/tree.md?vue&type=script&lang=ts\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return _node_modules_ts_loader_index_js_ref_2_node_modules_vue_loader_dist_index_js_ref_3_0_md_loader_index_js_tree_md_vue_type_script_lang_ts__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n/* empty/unused harmony star reexport */ //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi93ZWJzaXRlL2RvY3MvZW4tVVMvdHJlZS5tZD92dWUmdHlwZT1zY3JpcHQmbGFuZz10cy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3dlYnNpdGUvZG9jcy9lbi1VUy90cmVlLm1kPzRlNzkiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgZGVmYXVsdCB9IGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy90cy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9kaXN0L2luZGV4LmpzPz9yZWYtLTMtMCEuLi8uLi9tZC1sb2FkZXIvaW5kZXguanMhLi90cmVlLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPXRzXCI7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uL25vZGVfbW9kdWxlcy90cy1sb2FkZXIvaW5kZXguanM/P3JlZi0tMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9kaXN0L2luZGV4LmpzPz9yZWYtLTMtMCEuLi8uLi9tZC1sb2FkZXIvaW5kZXguanMhLi90cmVlLm1kP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPXRzXCIiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./website/docs/en-US/tree.md?vue&type=script&lang=ts\n");

/***/ }),

/***/ "./website/docs/en-US/tree.md?vue&type=template&id=3075f4b0":
/*!******************************************************************!*\
  !*** ./website/docs/en-US/tree.md?vue&type=template&id=3075f4b0 ***!
  \******************************************************************/
/*! exports provided: render */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_vue_loader_dist_templateLoader_js_ref_5_node_modules_vue_loader_dist_index_js_ref_3_0_md_loader_index_js_tree_md_vue_type_template_id_3075f4b0__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/dist/templateLoader.js??ref--5!../../../node_modules/vue-loader/dist??ref--3-0!../../md-loader!./tree.md?vue&type=template&id=3075f4b0 */ \"./node_modules/vue-loader/dist/templateLoader.js?!./node_modules/vue-loader/dist/index.js?!./website/md-loader/index.js!./website/docs/en-US/tree.md?vue&type=template&id=3075f4b0\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _node_modules_vue_loader_dist_templateLoader_js_ref_5_node_modules_vue_loader_dist_index_js_ref_3_0_md_loader_index_js_tree_md_vue_type_template_id_3075f4b0__WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi93ZWJzaXRlL2RvY3MvZW4tVVMvdHJlZS5tZD92dWUmdHlwZT10ZW1wbGF0ZSZpZD0zMDc1ZjRiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3dlYnNpdGUvZG9jcy9lbi1VUy90cmVlLm1kPzI5M2MiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvZGlzdC90ZW1wbGF0ZUxvYWRlci5qcz8/cmVmLS01IS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2Rpc3QvaW5kZXguanM/P3JlZi0tMy0wIS4uLy4uL21kLWxvYWRlci9pbmRleC5qcyEuL3RyZWUubWQ/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MzA3NWY0YjBcIiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./website/docs/en-US/tree.md?vue&type=template&id=3075f4b0\n");

/***/ })

}]);